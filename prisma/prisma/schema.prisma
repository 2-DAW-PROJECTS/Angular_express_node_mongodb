// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider      = "mongodb"
  url           = env("DATABASE_URL")
  relationMode  = "prisma"
}

model UserEnterprise {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  username    String    @unique
  email       String    @unique
  password    String
  usertype    String    @default("enterprise")
  isActive    Boolean   @default(true)
  timestamp   DateTime  @default(now())
  permissions String[]
  telephone   String?
  followers   Int       @default(0)
  offerts     Offert[]
  posts       Post[]    @relation("UserEnterprisePosts")
  comments    Comment[] @relation("UserEnterpriseComments")
}

model Offert {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      UserEnterprise @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  applicants Applicant[]
}

model Applicant {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  offert    Offert   @relation(fields: [offertId], references: [id])
  offertId  String   @db.ObjectId
  userId    String   @db.ObjectId
  timestamp DateTime @default(now())
  status    String   @default("Pending")
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  author    UserEnterprise @relation(fields: [authorId], references: [id], name: "UserEnterprisePosts")
  authorId  String   @db.ObjectId
  comments  Comment[] @relation("PostComments")
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  post      Post     @relation(fields: [postId], references: [id], name: "PostComments") 
  postId    String   @db.ObjectId 
  author    UserEnterprise @relation(fields: [authorId], references: [id], name: "UserEnterpriseComments")
  authorId  String   @db.ObjectId
}

